import { ComponentFactoryResolver, ElementRef, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';
import { ControlContainer, NgControl } from '@angular/forms';
import { ControlErrorAnchorDirective } from './control-error-anchor.directive';
import { ErrorTailorConfig } from './providers';
import { FormActionDirective } from './form-action.directive';
import { ErrorsMap } from './types';
export declare class ControlErrorsDirective implements OnInit, OnDestroy {
    private vcr;
    private resolver;
    private host;
    private config;
    private globalErrors;
    private controlErrorAnchorParent;
    private form;
    private ngControl;
    private controlContainer;
    customErrors: ErrorsMap;
    controlErrorsClass: string | undefined;
    controlErrorsTpl: TemplateRef<any> | undefined;
    controlErrorsOnAsync: boolean;
    controlErrorsOnBlur: boolean;
    controlErrorAnchor: ControlErrorAnchorDirective;
    private ref;
    private anchor;
    private submit$;
    private reset$;
    private control;
    private destroy;
    private showError$;
    private mergedConfig;
    private customAnchorDestroyFn;
    constructor(vcr: ViewContainerRef, resolver: ComponentFactoryResolver, host: ElementRef, config: ErrorTailorConfig, globalErrors: any, controlErrorAnchorParent: ControlErrorAnchorDirective, form: FormActionDirective, ngControl: NgControl, controlContainer: ControlContainer);
    ngOnInit(): void;
    private setError;
    /**
     * Explicit showing of a control error via some custom application code.
     */
    showError(): void;
    /**
     * Explicit hiding of a control error via some custom application code.
     */
    hideError(): void;
    ngOnDestroy(): void;
    private get isInput();
    private clearRefs;
    private valueChanges;
    private resolveAnchor;
    private buildConfig;
}
